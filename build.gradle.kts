plugins {
    id("net.ivoa.vo-dml.vodmltools") version "0.5.10"
}

vodml {
   vodmlDir.set(layout.projectDirectory.dir("vo-dml"))
    vodmlFiles.setFrom(project.files (
        vodmlDir.file("mango.vo-dml.xml")
    ))
    bindingFiles.setFrom(vodmlDir.file("mango.vodml-binding.xml"))
    outputDocDir.set(layout.projectDirectory.dir("doc/vodml-generated"))
    outputSiteDir.set(layout.projectDirectory.dir("site/generated")) // N.B the last part of this path must be "generated"



}

dependencies {
    api("org.javastro.ivoa.vo-dml:ivoa-base:1.0-SNAPSHOT")
    api("org.javastro.ivoa.dm:coordinateDM:1.1.2-SNAPSHOT")
    api("org.javastro.ivoa.dm:PhotDM:1.1-SNAPSHOT")
    api("org.javastro.ivoa.dm:measurementDM:1.0-SNAPSHOT")
}


tasks.register<Exec>("makeSiteNav")
{
    commandLine("yq","eval",  "(.nav | .. |select(has(\"AutoGenerated Documentation\"))|.[\"AutoGenerated Documentation\"]) += load(\"site/generated/allnav.yml\")", "mkdocs_template.yml")
    standardOutput= file("mkdocs.yml").outputStream()
    dependsOn("vodmlSite")

}
tasks.register<Exec>("testSite"){
    commandLine("mkdocs", "serve")
    dependsOn("makeSiteNav")
}
tasks.register<Exec>("doSite"){
    commandLine("mkdocs", "gh-deploy", "--force")
    dependsOn("makeSiteNav")
}
